# Author: Aniruddha Gokhale
# Vanderbilt University
# Created May 2017,
# Modified Nov 2017
# Modified Oct 2018
# Modified Oct 2019 to use Python3
# Modified Spring 2021 to break this into client-server
#
# For Cloud Computing class
#
# First, use the latest ubuntu image, which points to the
# latest LTS image, currently 20.04LTS
FROM ubuntu:latest
Env TZ=US/NewYork
Run ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

Run apt-get -y update && apt-get install -y tzdata
#
# Now install the needed python packages
RUN apt-get -y update && apt-get install -y net-tools python3 gcc
RUN apt-get -y update && apt-get install -y python3-dev python3-pip zookeeper

ARG kafka_version=1.1.0
ARG scala_version=2.12
ARG glibc_version=2.27-r0

MAINTAINER wurstmeister

ENV KAFKA_VERSION=$kafka_version \
    SCALA_VERSION=$scala_version \
    KAFKA_HOME=/opt/kafka \
    GLIBC_VERSION=$glibc_version

ENV PATH=${PATH}:${KAFKA_HOME}/bin

COPY download-kafka.sh start-kafka.sh broker-list.sh create-topics.sh /tmp/

RUN apk add --no-cache bash curl jq docker \
 && mkdir /opt \
 && chmod a+x /tmp/*.sh \
 && mv /tmp/start-kafka.sh /tmp/broker-list.sh /tmp/create-topics.sh /usr/bin \
 && sync && /tmp/download-kafka.sh \
 && tar xfz /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz -C /opt \
 && rm /tmp/kafka_${SCALA_VERSION}-${KAFKA_VERSION}.tgz \
 && ln -s /opt/kafka_${SCALA_VERSION}-${KAFKA_VERSION} /opt/kafka \
 && rm /tmp/* \
 && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk \
 && apk add --no-cache --allow-untrusted glibc-${GLIBC_VERSION}.apk \
 && rm glibc-${GLIBC_VERSION}.apk